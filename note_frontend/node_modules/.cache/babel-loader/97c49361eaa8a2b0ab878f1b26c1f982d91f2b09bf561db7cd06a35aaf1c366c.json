{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Omistaja\\\\fullstack 2023\\\\fullstack-2023\\\\testausta\\\\testi5\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport Note from './components/Note';\nimport noteService from './services/notes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState('');\n  const [showAll, setShowAll] = useState(true);\n  useEffect(() => {\n    noteService.getAll().then(initialNotes => {\n      setNotes(initialNotes);\n    });\n  }, []);\n  const toggleImportanceOf = id => {\n    const note = notes.find(n => n.id === id);\n    const changedNote = {\n      ...note,\n      important: !note.important\n    };\n    noteService.update(id, changedNote).then(returnedNote => {\n      setNotes(notes.map(note => note.id !== id ? note : returnedNote));\n    });\n  };\n  const addNote = event => {\n    event.preventDefault();\n    const noteObject = {\n      content: newNote,\n      important: Math.random() > 0.5\n    };\n    noteService.create(noteObject).then(returnedNote => {\n      setNotes(notes.concat(returnedNote));\n      setNewNote('');\n    });\n  };\n  const handleNoteChange = event => {\n    setNewNote(event.target.value);\n  };\n  const notesToShow = showAll ? notes : notes.filter(note => note.important);\n  const Note = _ref => {\n    let {\n      note,\n      toggleImportance\n    } = _ref;\n    const label = note.important ? 'make not important' : 'make important';\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [note.content, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleImportance,\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowAll(!showAll),\n        children: [\"show \", showAll ? 'important' : 'all']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: notesToShow.map(note => /*#__PURE__*/_jsxDEV(Note, {\n          note: note,\n          toggleImportance: () => toggleImportanceOf(note.id)\n        }, note.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addNote,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: newNote,\n        onChange: handleNoteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"YoJCZcz2gqmCo+muBMJeaVoxZWM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Note","noteService","jsxDEV","_jsxDEV","App","_s","notes","setNotes","newNote","setNewNote","showAll","setShowAll","getAll","then","initialNotes","toggleImportanceOf","id","note","find","n","changedNote","important","update","returnedNote","map","addNote","event","preventDefault","noteObject","content","Math","random","create","concat","handleNoteChange","target","value","notesToShow","filter","_ref","toggleImportance","label","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","type","_c","$RefreshReg$"],"sources":["C:/Users/Omistaja/fullstack 2023/fullstack-2023/testausta/testi5/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react'\nimport Note from './components/Note'\nimport noteService from './services/notes'\n\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(true)\n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(initialNotes => {\n        setNotes(initialNotes)\n      })\n  }, [])\n\n  const toggleImportanceOf = id => {\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n\n    noteService\n      .update(id, changedNote)\n        .then(returnedNote => {\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n      })\n  }\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      important: Math.random() > 0.5\n    }\n\n    noteService\n      .create(noteObject)\n        .then(returnedNote => {\n        setNotes(notes.concat(returnedNote))\n        setNewNote('')\n      })\n  }\n\n  const handleNoteChange = (event) => {\n    setNewNote(event.target.value)\n  }\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter(note => note.important)\n\n  const Note = ({ note, toggleImportance }) => {\n    const label = note.important\n      ? 'make not important' : 'make important'\n  \n    return (\n      <li>\n        {note.content} \n        <button onClick={toggleImportance}>{label}</button>\n      </li>\n    )\n  }\n\n\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all' }\n        </button>\n      </div> \n      <ul>\n        <ul>\n          {notesToShow.map(note => \n            <Note key={note.id} note={note} toggleImportance={() => toggleImportanceOf(note.id)}/>\n          )}\n        </ul>\n      </ul>\n      <form onSubmit={addNote}>\n        <input value={newNote} onChange={handleNoteChange} />\n        <button type=\"submit\">save</button>\n      </form>\n    </div>\n  )\n}\n\nexport default App"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,WAAW,MAAM,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACdE,WAAW,CACRW,MAAM,EAAE,CACRC,IAAI,CAACC,YAAY,IAAI;MACpBP,QAAQ,CAACO,YAAY,CAAC;IACxB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,kBAAkB,GAAGC,EAAE,IAAI;IAC/B,MAAMC,IAAI,GAAGX,KAAK,CAACY,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACH,EAAE,KAAKA,EAAE,CAAC;IACzC,MAAMI,WAAW,GAAG;MAAE,GAAGH,IAAI;MAAEI,SAAS,EAAE,CAACJ,IAAI,CAACI;IAAU,CAAC;IAE3DpB,WAAW,CACRqB,MAAM,CAACN,EAAE,EAAEI,WAAW,CAAC,CACrBP,IAAI,CAACU,YAAY,IAAI;MACtBhB,QAAQ,CAACD,KAAK,CAACkB,GAAG,CAACP,IAAI,IAAIA,IAAI,CAACD,EAAE,KAAKA,EAAE,GAAGC,IAAI,GAAGM,YAAY,CAAC,CAAC;IACnE,CAAC,CAAC;EACN,CAAC;EAED,MAAME,OAAO,GAAIC,KAAK,IAAK;IACzBA,KAAK,CAACC,cAAc,EAAE;IACtB,MAAMC,UAAU,GAAG;MACjBC,OAAO,EAAErB,OAAO;MAChBa,SAAS,EAAES,IAAI,CAACC,MAAM,EAAE,GAAG;IAC7B,CAAC;IAED9B,WAAW,CACR+B,MAAM,CAACJ,UAAU,CAAC,CAChBf,IAAI,CAACU,YAAY,IAAI;MACtBhB,QAAQ,CAACD,KAAK,CAAC2B,MAAM,CAACV,YAAY,CAAC,CAAC;MACpCd,UAAU,CAAC,EAAE,CAAC;IAChB,CAAC,CAAC;EACN,CAAC;EAED,MAAMyB,gBAAgB,GAAIR,KAAK,IAAK;IAClCjB,UAAU,CAACiB,KAAK,CAACS,MAAM,CAACC,KAAK,CAAC;EAChC,CAAC;EAED,MAAMC,WAAW,GAAG3B,OAAO,GACvBJ,KAAK,GACLA,KAAK,CAACgC,MAAM,CAACrB,IAAI,IAAIA,IAAI,CAACI,SAAS,CAAC;EAExC,MAAMrB,IAAI,GAAGuC,IAAA,IAAgC;IAAA,IAA/B;MAAEtB,IAAI;MAAEuB;IAAiB,CAAC,GAAAD,IAAA;IACtC,MAAME,KAAK,GAAGxB,IAAI,CAACI,SAAS,GACxB,oBAAoB,GAAG,gBAAgB;IAE3C,oBACElB,OAAA;MAAAuC,QAAA,GACGzB,IAAI,CAACY,OAAO,eACb1B,OAAA;QAAQwC,OAAO,EAAEH,gBAAiB;QAAAE,QAAA,EAAED;MAAK;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAU;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAChD;EAET,CAAC;EAID,oBACE5C,OAAA;IAAAuC,QAAA,gBACEvC,OAAA;MAAAuC,QAAA,EAAI;IAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACd5C,OAAA;MAAAuC,QAAA,eACEvC,OAAA;QAAQwC,OAAO,EAAEA,CAAA,KAAMhC,UAAU,CAAC,CAACD,OAAO,CAAE;QAAAgC,QAAA,GAAC,OACtC,EAAChC,OAAO,GAAG,WAAW,GAAG,KAAK;MAAA;QAAAkC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAC5B;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACL,eACN5C,OAAA;MAAAuC,QAAA,eACEvC,OAAA;QAAAuC,QAAA,EACGL,WAAW,CAACb,GAAG,CAACP,IAAI,iBACnBd,OAAA,CAACH,IAAI;UAAeiB,IAAI,EAAEA,IAAK;UAACuB,gBAAgB,EAAEA,CAAA,KAAMzB,kBAAkB,CAACE,IAAI,CAACD,EAAE;QAAE,GAAzEC,IAAI,CAACD,EAAE;UAAA4B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAoE;MACvF;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACF,eACL5C,OAAA;MAAM6C,QAAQ,EAAEvB,OAAQ;MAAAiB,QAAA,gBACtBvC,OAAA;QAAOiC,KAAK,EAAE5B,OAAQ;QAACyC,QAAQ,EAAEf;MAAiB;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACrD5C,OAAA;QAAQ+C,IAAI,EAAC,QAAQ;QAAAR,QAAA,EAAC;MAAI;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC9B;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACH;AAEV,CAAC;AAAA1C,EAAA,CAlFKD,GAAG;AAAA+C,EAAA,GAAH/C,GAAG;AAoFT,eAAeA,GAAG;AAAA,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}